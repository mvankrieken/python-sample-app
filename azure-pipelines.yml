trigger:
- main

pool: 
  name: Local-kubernetes
  demands: 
    - DEF_TYPE -equals build

strategy:
  matrix:
    Python39:
      python.version: '3.9'

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture:  'x64' 
    disableDownloadFromRegistry: true
    addToPath: true
  displayName: 'Use Python $(python.version)'

# Checkouts main code
- checkout: self
  persistCredentials: true

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements-dev.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest-azurepipelines
    pytest --cov=src --cov-report xml:coverage.xml tests/
  displayName: 'Pytest'

- script: |
    ruff check src/
  displayName: 'Ruff'

 # Update deployment file
- script: |
    git config --global user.name "Martin van Krieken"
    git config --global user.email "mkrieken@gmail.com"
    git fetch
    git checkout -b main
    git branch -v -a
    git pull ...
    python -m poetry version patch
    git add .
    git commit -m "[skip ci] New version"
    git push origin main
  displayName: 'Update version and commit to git'

- script: |
    pip install 'build<0.10.0'
    python -m build .
  displayName: 'Build'
- task: TwineAuthenticate@1
  displayName: Twine auth
  inputs:
    artifactFeed: learning/sample-app

- script: |
    pip install twine
    twine upload -r sample-app --verbose --config-file $(PYPIRC_PATH) dist/*
  displayName: 'Upload to feed'
